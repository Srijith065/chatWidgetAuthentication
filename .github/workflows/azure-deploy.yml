name: Build and Deploy Chat Widget to Azure Web App

on:
  push:
    branches:
      - chatWidgetAuthentication  # Trigger the workflow on this branch
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Zip the necessary files for deployment
      - name: Zip widget files for deployment
        run: |
          zip -r release.zip ./ -x "*.git*" -x "node_modules/*"  # Exclude unnecessary files

      # Upload the zipped file as an artifact for deployment
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: widget-app
          path: release.zip

      # Download artifact and deploy to Azure
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: widget-app

      # Unzip the artifact and overwrite files automatically
      - name: Unzip artifact for deployment
        run: unzip -o release.zip -d ./  # -o overwrites existing files without prompting

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
          auth-type: 'SERVICE_PRINCIPAL'  # Ensures you're using the Service Principal for authentication
          enable-AzPSSession: false  # Optional, if you're not using PowerShell for Azure tasks
          environment: azurecloud  # Default Azure environment
          allow-no-subscriptions: false
          audience: api://AzureADTokenExchange  # Required for Azure service principal-based authentication

      # Deploy the widget to Azure Web App
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'widget-appbased-auth'  # Your Azure Web App name
          slot-name: 'Production'  # Or specify any other slot if you're using staging or other slots
          package: ./  # Ensure this points to the correct location of your app files
